services:
  api:
    build:
      context: .
      dockerfile: DatabasePractice/Dockerfile
    ports:
      - "8080:8080"
      - "8081:8081"
    depends_on:
      - db
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=project;Username=common_user;Password=15a16k

  db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: common_user
      POSTGRES_PASSWORD: 15a16k
      POSTGRES_DB: project
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  test:
    build:
      context: .
      dockerfile: UnitTestingOfDatabaseProject/Dockerfile
    depends_on:
      - api
      - db
    environment:
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=project;Username=common_user;Password=15a16k
    entrypoint: [ "dotnet", "test", "--no-build", "--logger:trx" ]

  gitlab:
    image: gitlab/gitlab-ce:latest
    restart: always
    container_name: gitlab-local
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://localhost:8088'
        nginx['listen_port'] = 8088
    ports:
      - "8088:8088"
    volumes:
      - gitlab-config:/etc/gitlab
      - gitlab-logs:/var/log/gitlab
      - gitlab-data:/var/opt/gitlab
  
  gitlab-runner:
    image: gitlab/gitlab-runner:latest
    container_name: gitlab-runner
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  pgdata:
  gitlab-config:
  gitlab-logs:
  gitlab-data: